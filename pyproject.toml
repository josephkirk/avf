[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "avf"
version = "0.1.0"
description = "Asset Version Framework - A comprehensive asset versioning system for game development pipelines"
readme = "README.md"
authors = [
    { name = "AVF Team", email = "team@avf.com" }
]
license = { text = "MIT" }
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control",
]
dependencies = [
    "pydantic>=2.0",
    "gitpython>=3.1.40",
    "p4python>=2023.2",
    "structlog>=24.1.0",
    "sqlalchemy>=2.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=3.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.3.1",
]
dev = [
    "black>=22.0",
    "ruff>=0.1.14",
    "mypy>=1.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/your-username/avf"
Repository = "https://github.com/your-username/avf"
Documentation = "https://github.com/your-username/avf/blob/main/README.md"
Changelog = "https://github.com/your-username/avf/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/avf"]

[tool.hatch.build.targets.sdist]
include = [
    "src/avf",
    "tests",
    "LICENSE",
    "README.md",
    "MANIFEST.in",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["avf"]

[tool.setuptools.package-data]
"avf" = ["py.typed"]

[tool.ruff]
line-length = 100
target-version = "py38"
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "W",   # pycodestyle warnings
]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --doctest-modules"
testpaths = ["tests"]
